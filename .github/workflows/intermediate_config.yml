name: Intermediate Configuration for RAX3000M-eMMC_XR30-eMMC

on:
  workflow_call:
    inputs:
      LAN_IP:
        description: '设置路由器IP地址'
        required: true
        type: string
      WIFI_DRIVER:
        description: '选择WiFi驱动'
        required: true
        type: string
      EEPROM:
        description: '使用nx30pro eeprom和固定WiFi MAC地址'
        required: true
        type: boolean
      APP_MTK:
        description: '使用luci-app-mtk的wifi配置'
        required: true
        type: boolean
      NO_DOCKERMAN:
        description: '不构建luci-app-dockerman?'
        required: true
        type: boolean
      ssh:
        description: 'SSH连接到Actions?'
        required: false
        type: boolean
      RAX3000M_EMMC_DTS_FILE:
        description: 'RAX3000M eMMC的DTS文件路径'
        required: true
        type: string
      CONFIG_FILE:
        description: '配置文件路径'
        required: true
        type: string
      GITHUB_WORKSPACE:
        description: 'GitHub工作空间路径'
        required: true
        type: string
      env:
        description: '环境变量'
        required: false
        type: string
    secrets:
      TELEGRAM_CHAT_ID:
        description: 'Telegram聊天ID'
        required: false
      TELEGRAM_BOT_TOKEN:
        description: 'Telegram机器人令牌'
        required: false

jobs:
  intermediate_config_job:
    runs-on: ubuntu-24.04
    steps:
    - name: 执行中间配置任务
      run: |
        cd openwrt
        # 设置RAX3000M-eMMC的eMMC使用highspeed
        if! grep -q 'cap-mmc-highspeed' "${{ inputs.RAX3000M_EMMC_DTS_FILE }}"; then
            sed -i -e '/bus-width = <8>;/ a\	cap-mmc-highspeed;' "${{ inputs.RAX3000M_EMMC_DTS_FILE }}"
        fi

        # 设置LAN IP地址（路由器登录地址）
        SET_IP=${{ inputs.LAN_IP }}
        if [[ $SET_IP =~ ^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$ ]]; then
            sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" $(find feeds/luci/modules/luci-mod-system -type f -name "flash.js")
            sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" package/base-files/files/bin/config_generate
            echo "Set LAN IP Address: $SET_IP"
        else
            echo "Invalid IP address, use default."
        fi

        # 设置WiFi驱动版本
        wifi_driver=$(echo "${{ inputs.WIFI_DRIVER }}" | sed -E 's/^(v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
        firmware=$(echo "${{ inputs.WIFI_DRIVER }}" | sed -E 's/.*fw-([0-9]{8}|default).*/\1/g')
        if [ "$wifi_driver" == "v7.6.6.1" ]; then
            sed -i 's/CONFIG_MTK_MT_WIFI_DRIVER_VERSION_7672=y/CONFIG_MTK_MT_WIFI_DRIVER_VERSION_7661=y/g' .config
        fi
        if [ "$firmware" == "default" ]; then
            sed -i 's/CONFIG_MTK_MT_WIFI_MT7981_20240823=y/CONFIG_MTK_MT_WIFI_MT7981_DEFAULT_FIRMWARE=y/g' .config
        else
            sed -i "s/CONFIG_MTK_MT_WIFI_MT7981_20240823=y/CONFIG_MTK_MT_WIFI_MT7981_${firmware}=y/g" .config
        fi
        echo "Use WiFi Driver: $wifi_driver-fw-$firmware"

        # 使用nx30pro的高功率eeprom并固定WiFi MAC地址
        if ${{ inputs.EEPROM == 'true' }}; then
            wifi_driver=$(echo "${{ inputs.WIFI_DRIVER }}" | sed -E 's/^(v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
            if [ "$wifi_driver" == "v7.6.6.1" ]; then
                cp ${{ inputs.GITHUB_WORKSPACE }}/RAX3000M-eMMC_XR30-eMMC-hanwckf/mt79xx_20220907-8b55f5_eeprom.tar.xz dl/mt79xx_20220907-8b55f5.tar.xz
            else
                cp ${{ inputs.GITHUB_WORKSPACE }}/RAX3000M-eMMC_XR30-eMMC-hanwckf/mt79xx_20231229-4012a0_eeprom.tar.xz dl/mt79xx_20231229-4012a0.tar.xz
            fi
            echo -e "\t\tlocal wifi0_mac=\"\$(mmc_get_mac_binary factory 0x04)\"
            \t\tsed -i \"/^MacAddress=.*/ {s/.*/MacAddress=\$wifi0_mac/;b;}; \\\$aMacAddress=\$wifi0_mac\" /etc/wireless/mediatek/mt7981.dbdc.b0.dat
            \t\tlocal wifi1_mac=\"\$(macaddr_setbit_la \$wifi0_mac)\"
            \t\tsed -i \"/^MacAddress=.*/ {s/.*/MacAddress=\$wifi1_mac/;b;}; \\\$aMacAddress=\$wifi1_mac\" /etc/wireless/mediatek/mt7981.dbdc.b1.dat" > temp_insert.txt
            sed -i '/mediatek_setup_macs()/,/\};/ {/cmcc,rax3000m-emmc)/ {n;n;n;r temp_insert.txt
            }}' target/linux/mediatek/mt7981/base-files/etc/board.d/02_network
        fi

        # 使用luci-app-mtk无线配置
        if ${{ inputs.APP_MTK == 'true' }}; then
            sed -i 's/CONFIG_PACKAGE_luci-app-mtwifi-cfg=y/CONFIG_PACKAGE_luci-app-mtk=y/g' .config
            sed -i 's/CONFIG_PACKAGE_luci-i18n-mtwifi-cfg-zh-cn=y/CONFIG_PACKAGE_luci-i18n-mtk-zh-cn=y/g' .config
            sed -i 's/CONFIG_PACKAGE_mtwifi-cfg=y/CONFIG_PACKAGE_wifi-profile=y/g' .config
            sed -i 's/CONFIG_PACKAGE_lua-cjson=y/CONFIG_WIFI_NORMAL_SETTING=y/g' .config
        fi

        # 取消编译dockerman
        if ${{ inputs.NO_DOCKERMAN == 'true' }}; then
            sed -i '/CONFIG_PACKAGE_luci-app-dockerman=y/d' .config
        fi

        # SSH链接管理
        if (${{ inputs.ssh == 'true' && inputs.ssh  != 'false' }}) || (contains(github.event.action, 'ssh')); then
            TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            # 这里可能需要根据实际的SSH管理逻辑进一步完善
            echo "Configuring SSH connection with provided tokens..."
        fi
